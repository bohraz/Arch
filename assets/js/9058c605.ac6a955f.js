"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[748],{82112:t=>{t.exports=JSON.parse('{"functions":[{"name":"createMachine","desc":"For creating a new hierarchical state machine. Constructs a state machine instance based on a provided definition and options list.","params":[{"name":"definition","desc":"the hierarchical structure that outlines the states, transitions, and behaviors of a state machine","lua_type":"Definition"},{"name":"options","desc":"for tailoring the behavior of the state machine, setting initial context, and adding references for the definition","lua_type":"Options"}],"returns":[{"desc":"","lua_type":"Machine"}],"function_type":"static","source":{"line":316,"path":"src/init.lua"}}],"properties":[],"types":[{"name":"Context","desc":"","lua_type":"{ janitor: any, event: string, Send: (string, any) -> (), target: string?, any: any, }","source":{"line":9,"path":"src/Types.lua"}},{"name":"Options","desc":"","lua_type":"{ context: { any }?, actions: { string: (Context, any) -> () }?, guards: { string: (Context, any) -> boolean }?, maxLogs: number?, logTime: boolean?, debugMode: boolean?, }","source":{"line":12,"path":"src/Types.lua"}},{"name":"Action","desc":"","lua_type":"(Context, any) -> ()","source":{"line":15,"path":"src/Types.lua"}},{"name":"Transition","desc":"","lua_type":"string | { target: string?, actions: { string | Action }?, guards: { string | Action }? } | { { target: string?, actions: { string | Action }?, guards: { string | Action }? } }","source":{"line":18,"path":"src/Types.lua"}},{"name":"AtomicState","desc":"","lua_type":"{ id: string, OnEntry: ( string | Action )?, OnExit: ( string | Action )?, events: { string: Transition }? }","source":{"line":21,"path":"src/Types.lua"}},{"name":"CompoundState","desc":"","lua_type":"AtomicState & { initial: string, states: States }","source":{"line":24,"path":"src/Types.lua"}},{"name":"ParallelState","desc":"","lua_type":"AtomicState & { parallel: true, states: States }","source":{"line":27,"path":"src/Types.lua"}},{"name":"HistoryState","desc":"","lua_type":"CompoundState & { history: string }","source":{"line":30,"path":"src/Types.lua"}},{"name":"Definition","desc":"","lua_type":"{id: string, initial: string?, parallel: boolean?, states: { string: ( CompoundState | AtomicState | HistoryState | ParallelState ) } } | ModuleScript","source":{"line":34,"path":"src/Types.lua"}}],"name":"Arch","desc":"This is the Arch class","source":{"line":6,"path":"src/Types.lua"}}')}}]);